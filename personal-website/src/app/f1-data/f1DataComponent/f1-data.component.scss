@use '@angular/material' as mat;
@import "../../shared-scss/shared-scss.scss";

.inputContainer {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    max-width: 90%;
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 25px; // Adjust the gap as needed
    button {
        margin-bottom: 20px;
        margin-left: 25px;
    }
    padding: 20px;
    gap: 16px;
    transition: all 0.3s ease-in-out;

    &.compact {
        padding: 8px;
        background: #f5f5f5;
        border-bottom: 1px solid #ddd;
        
        mat-form-field {
            width: 200px;
            font-size: 0.9em;
        }
    }
}

mat-form-field {
    width: 300px;
    transition: all 0.3s ease-in-out;
}

.chat-container {
    opacity: 0;
    animation: fadeIn 0.3s ease-in-out forwards;
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

h4 {
    color: $base-cream;
}

.base-cream {
    color: $base-cream;
}

.chat-container {
  height: 100vh;
  display: flex;
  flex-direction: column;
  background-color: $base-black;
  color: $base-cream;
  margin: 0 auto;
  max-width: 900px; // New max-width for narrower chat
  margin: 0 auto;   // Center the chat container

  @media (max-width: 768px) {
    width: 100%;
  }
  @media (min-width: 768px) {
    // padding: 0 2rem; // More padding on larger screens
    // width: 85%; // Slightly narrower on desktop
  }
}

.chat-header {
  padding: 1.5rem 1rem;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: $base-black;
  z-index: 2;
  position: relative;

  &::after {
    content: '';
    position: absolute;
    bottom: -20px;
    left: 0;
    right: 0;
    height: 20px;
    background: linear-gradient($base-black, transparent);
    pointer-events: none;
  }

  h2 {
    margin: 0;
    font-weight: 300;
    text-align: center;
  }

  .connection-status {
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%);
    font-size: 1em;
    opacity: 0.6;
    
    &.connected {
      color: #4caf50;
    }
  }
}

.messages-container {
  flex: 1;
  overflow-y: auto;
  padding: 1rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  position: relative; // Add this to contain absolute positioned elements

  .message-wrapper {
    display: flex;
    flex-direction: column;
  }

  .message {
    max-width: 80%;
    padding: 0.8rem 1rem;
    border-radius: 1rem;
    font-size: 1em;
    position: relative; // Add this

    .copy-button {
      position: absolute;
      color: white;
      bottom: -32px;  // Position below message
      right: -5px;
      opacity: 0;
      transition: all 0.2s ease;
      scale: 0.8;
      background-color: transparent;
      z-index: 2;
      
      .mat-icon {
        font-size: 18px;
        width: 18px;
        height: 18px;
      }

      &:active {
        transform: scale(0.9);
      }
    }

    &:hover .copy-button {
      opacity: 0.8;
      scale: 1;

      &:hover {
        opacity: 1;
      }
    }

    &.assistant-message .copy-button .mat-icon {
      color: rgba(255, 255, 255, 0.8);
    }
    
    &.user-message {
      align-self: flex-end;
      background-color: $base-cream;
      color: $base-black;
      border-bottom-right-radius: 0.2rem;
    }
    
    &.assistant-message {
      align-self: flex-start;
      background-color: rgba(255, 255, 255, 0.1);
      border-bottom-left-radius: 0.2rem;
    }
    
    @media (min-width: 768px) {
      max-width: 70%; // Narrower messages on desktop
    }

    &.loading {
      background-color: rgba(255, 255, 255, 0.05);
      border: 1px solid rgba(255, 255, 255, 0.1);
    }

    &.error-message {
      align-self: center;
      background-color: rgba(255, 0, 0, 0.1);
      border: 1px solid rgba(255, 0, 0, 0.2);
      color: #ff6b6b;
      font-style: italic;
      font-size: 1em;
    }

    .message-metadata {
      margin-top: 4px;
      display: flex;
      justify-content: flex-end;
      
      .message-time {
        font-size: 0.75rem;
        color: rgba(0, 0, 0, 0.5);
      }
    }
  }
  
  // New style for the message timestamp
  .message-time {
    font-size: 0.8em;
    color: rgba(255, 255, 255, 0.6);
    margin-top: 0.5rem;
  }
}

.input-container {
  padding: 1rem;
  display: flex;
  gap: 0.5rem;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  max-width: 100%; // Ensure it doesn't overflow
  margin: 0 auto; // Center the input container
  
  @media (min-width: 768px) {
    width: 95%; // Slightly narrower on desktop
  }

  input {
    flex: 1;
    padding: 1rem 1.5rem;  // Increased padding
    border: none;
    border-radius: 1.5rem;
    background-color: rgba(255, 255, 255, 0.1);
    color: $base-cream;
    font-size: 1em;  // Larger text
    
    &::placeholder {
      color: rgba(255, 255, 255, 0.5);
      font-size: 1em;  // Match input text size
    }
    
    &:focus {
      outline: none;
      background-color: rgba(255, 255, 255, 0.15);
    }
    
    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }
  }

  button {
    mat-icon {
      font-size: 1.5rem;  // Larger icon
      width: 1.5rem;
      height: 1.5rem;
      color: rgba(255, 255, 255, 0.5);  // Default color
    }

    &:not([disabled]) mat-icon {
      color: $base-cream;  // White when enabled
    }

    &[disabled] {
      opacity: 0.5;
    }

    // Make button itself larger
    width: 48px;
    height: 48px;
    line-height: 48px;
  }
}

.typing-indicator {
  padding: 0.5rem 0;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  
  .dots {
    display: flex;
    gap: 0.4rem;
    
    span {
      width: 0.5rem;
      height: 0.5rem;
      background-color: rgba(255, 255, 255, 0.7);
      border-radius: 50%;
      animation: bounce 1.4s infinite ease-in-out;
      
      &:nth-child(1) { animation-delay: -0.32s; }
      &:nth-child(2) { animation-delay: -0.16s; }
      &:nth-child(3) { animation-delay: 0s; }
    }
  }

  .text {
    font-size: 1em;
    color: rgba(255, 255, 255, 0.7);
    font-style: italic;
  }
}

@keyframes bounce {
  0%, 80%, 100% { 
    transform: scale(0);
    opacity: 0.3;
  }
  40% { 
    transform: scale(1);
    opacity: 1;
  }
}

.message-content {
  // Markdown styles
  ::ng-deep {
    pre {
      background-color: rgba(0, 0, 0, 0.1);
      padding: 1rem;
      border-radius: 4px;
      overflow-x: auto;
      font-size: 1em;
    }

    code {
      font-family: monospace;
      background-color: rgba(0, 0, 0, 0.1);
      padding: 2px 4px;
      border-radius: 2px;
      font-size: 1em;
    }

    p {
      margin: 0.5em 0;
      font-size: 1em;
    }

    ul, ol {
      margin: 0.5em 0;
      padding-left: 1.5em;
    }
  }
}

.scroll-button-wrapper {
  position: fixed;  // Changed from absolute to fixed
  bottom: 100px;   // Adjusted to sit above the input container
  right: calc((100% - 900px) / 2 + 16px);  // Align with chat container
  z-index: 1000;   // Increased z-index
  
  @media (max-width: 900px) {
    right: 16px;  // Fallback for smaller screens
  }

  .scroll-button {
    background-color: $base-cream;
    opacity: 0.9;
    
    &:hover {
      opacity: 1;
      background-color: $base-cream;
    }

    .mat-icon {
      color: $base-black;
    }
  }
}
